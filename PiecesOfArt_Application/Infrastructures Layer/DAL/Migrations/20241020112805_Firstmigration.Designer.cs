// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PiecesOfArt_Application.Infrastructures_Layer.DAL.Data;

#nullable disable

namespace PiecesOfArt_Application.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241020112805_Firstmigration")]
    partial class Firstmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PiecesOfArt_Application.Business_Layer.BLL.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A 19th-century art movement...",
                            Name = "Impressionism"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A period in European history...",
                            Name = "Renaissance"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Art that uses shapes and colors...",
                            Name = "Abstract"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Artistic work from late 19th century...",
                            Name = "Modern"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Art from ancient civilizations...",
                            Name = "Ancient"
                        });
                });

            modelBuilder.Entity("PiecesOfArt_Application.Business_Layer.BLL.Models.LoyaltyCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("loyaltyCards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "10% Off",
                            Name = "Bronze"
                        },
                        new
                        {
                            Id = 2,
                            Description = "20% Off",
                            Name = "Silver"
                        },
                        new
                        {
                            Id = 3,
                            Description = "30% Off",
                            Name = "Gold"
                        },
                        new
                        {
                            Id = 4,
                            Description = "40% Off",
                            Name = "Platinum"
                        },
                        new
                        {
                            Id = 5,
                            Description = "50% Off",
                            Name = "Crystal"
                        });
                });

            modelBuilder.Entity("PiecesOfArt_Application.Business_Layer.BLL.Models.PieceOfArt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("pieceOfArts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Price = 100000.0,
                            PublicationDate = new DateTime(1889, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Starry Night",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Price = 500000.0,
                            PublicationDate = new DateTime(1503, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mona Lisa",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Price = 120000.0,
                            PublicationDate = new DateTime(1923, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Composition VIII",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Price = 200000.0,
                            PublicationDate = new DateTime(1931, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Persistence of Memory",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Price = 150000.0,
                            PublicationDate = new DateTime(2560, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Small Pyramid",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("PiecesOfArt_Application.Business_Layer.BLL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoyaltyCardId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoyaltyCardId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 26,
                            Email = "nourhan@example.com",
                            LoyaltyCardId = 1,
                            Name = "Nourhan"
                        },
                        new
                        {
                            Id = 2,
                            Age = 35,
                            Email = "ahmed@example.com",
                            LoyaltyCardId = 2,
                            Name = "Ahmed"
                        },
                        new
                        {
                            Id = 3,
                            Age = 30,
                            Email = "mona@example.com",
                            LoyaltyCardId = 3,
                            Name = "Mona"
                        },
                        new
                        {
                            Id = 4,
                            Age = 22,
                            Email = "ali@example.com",
                            LoyaltyCardId = 4,
                            Name = "Ali"
                        },
                        new
                        {
                            Id = 5,
                            Age = 28,
                            Email = "sara@example.com",
                            LoyaltyCardId = 5,
                            Name = "Sara"
                        });
                });

            modelBuilder.Entity("PiecesOfArt_Application.Business_Layer.BLL.Models.PieceOfArt", b =>
                {
                    b.HasOne("PiecesOfArt_Application.Business_Layer.BLL.Models.Category", "Category")
                        .WithMany("ArtPieces")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiecesOfArt_Application.Business_Layer.BLL.Models.User", "User")
                        .WithMany("PurchasedArtPieces")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PiecesOfArt_Application.Business_Layer.BLL.Models.User", b =>
                {
                    b.HasOne("PiecesOfArt_Application.Business_Layer.BLL.Models.LoyaltyCard", "LoyaltyCard")
                        .WithMany("Users")
                        .HasForeignKey("LoyaltyCardId");

                    b.Navigation("LoyaltyCard");
                });

            modelBuilder.Entity("PiecesOfArt_Application.Business_Layer.BLL.Models.Category", b =>
                {
                    b.Navigation("ArtPieces");
                });

            modelBuilder.Entity("PiecesOfArt_Application.Business_Layer.BLL.Models.LoyaltyCard", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PiecesOfArt_Application.Business_Layer.BLL.Models.User", b =>
                {
                    b.Navigation("PurchasedArtPieces");
                });
#pragma warning restore 612, 618
        }
    }
}
